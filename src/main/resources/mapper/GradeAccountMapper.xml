<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grade.project.grade.mapper.GradeAccountMapper" >
  <resultMap id="BaseResultMap" type="com.grade.project.grade.model.GradeAccount" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="GZ_NAME" property="gzName" jdbcType="VARCHAR" />
    <result column="APP_ID" property="appId" jdbcType="VARCHAR" />
    <result column="APP_SECRECT" property="appSecrect" jdbcType="VARCHAR" />
    <result column="API_KEY" property="apiKey" jdbcType="VARCHAR" />
    <result column="MCH_ID" property="mchId" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="IS_DEL" property="isDel" jdbcType="INTEGER" />
    <result column="GMT_CREATE" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="GMT_MODIFIED" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="FILE_PATH" property="filePath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, GZ_NAME, APP_ID, APP_SECRECT, API_KEY, MCH_ID, STATUS, IS_DEL, GMT_CREATE,
    GMT_MODIFIED, FILE_PATH
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.grade.project.grade.model.GradeAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from grade_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from grade_account
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from grade_account
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.grade.project.grade.model.GradeAccountExample" >
    delete from grade_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.grade.project.grade.model.GradeAccount" >
    insert into grade_account (ID, USER_ID, GZ_NAME, 
      APP_ID, APP_SECRECT, API_KEY,
      MCH_ID, STATUS, IS_DEL, 
      GMT_CREATE, GMT_MODIFIED, FILE_PATH
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{gzName,jdbcType=VARCHAR}, 
      #{appId,jdbcType=VARCHAR}, #{appSecrect,jdbcType=VARCHAR}, #{apiKey,jdbcType=VARCHAR},
      #{mchId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{filePath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.grade.project.grade.model.GradeAccount" >
    insert into grade_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="gzName != null" >
        GZ_NAME,
      </if>
      <if test="appId != null" >
        APP_ID,
      </if>
      <if test="appSecrect != null" >
        APP_SECRECT,
      </if>
      <if test="apiKey != null" >
        API_KEY,
      </if>
      <if test="mchId != null" >
        MCH_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE,
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED,
      </if>
      <if test="filePath != null" >
        FILE_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="gzName != null" >
        #{gzName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appSecrect != null" >
        #{appSecrect,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null" >
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null" >
        #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grade.project.grade.model.GradeAccountExample" resultType="java.lang.Integer" >
    select count(*) from grade_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update grade_account
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.gzName != null" >
        GZ_NAME = #{record.gzName,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null" >
        APP_ID = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.appSecrect != null" >
        APP_SECRECT = #{record.appSecrect,jdbcType=VARCHAR},
      </if>
      <if test="record.apiKey != null" >
        API_KEY = #{record.apiKey,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null" >
        MCH_ID = #{record.mchId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        GMT_MODIFIED = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.filePath != null" >
        FILE_PATH = #{record.filePath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update grade_account
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      GZ_NAME = #{record.gzName,jdbcType=VARCHAR},
      APP_ID = #{record.appId,jdbcType=VARCHAR},
      APP_SECRECT = #{record.appSecrect,jdbcType=VARCHAR},
      API_KEY = #{record.apiKey,jdbcType=VARCHAR},
      MCH_ID = #{record.mchId,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      IS_DEL = #{record.isDel,jdbcType=INTEGER},
      GMT_CREATE = #{record.gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFIED = #{record.gmtModified,jdbcType=TIMESTAMP},
      FILE_PATH = #{record.filePath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grade.project.grade.model.GradeAccount" >
    update grade_account
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="gzName != null" >
        GZ_NAME = #{gzName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null" >
        APP_ID = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appSecrect != null" >
        APP_SECRECT = #{appSecrect,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null" >
        API_KEY = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null" >
        MCH_ID = #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        GMT_MODIFIED = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="filePath != null" >
        FILE_PATH = #{filePath,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grade.project.grade.model.GradeAccount" >
    update grade_account
    set USER_ID = #{userId,jdbcType=INTEGER},
      GZ_NAME = #{gzName,jdbcType=VARCHAR},
      APP_ID = #{appId,jdbcType=VARCHAR},
      APP_SECRECT = #{appSecrect,jdbcType=VARCHAR},
      API_KEY = #{apiKey,jdbcType=VARCHAR},
      MCH_ID = #{mchId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      IS_DEL = #{isDel,jdbcType=INTEGER},
      GMT_CREATE = #{gmtCreate,jdbcType=TIMESTAMP},
      GMT_MODIFIED = #{gmtModified,jdbcType=TIMESTAMP},
      FILE_PATH = #{filePath,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>